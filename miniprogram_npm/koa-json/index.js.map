{"version":3,"sources":["index.js"],"names":[],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.js","sourcesContent":["\nvar isJSON = require('koa-is-json');\nvar Stringify = require('streaming-json-stringify');\n\nvar hasOwnProperty = Object.hasOwnProperty\n\n/**\n * Pretty JSON response middleware.\n *\n *  - `pretty` default to pretty response [true]\n *  - `param` optional query-string param for pretty responses [none]\n *\n * @param {Object} opts\n * @return {GeneratorFunction}\n * @api public\n */\n\nmodule.exports = function(opts){\n  var opts = opts || {};\n  var param = opts.param;\n  var pretty = null == opts.pretty ? true : opts.pretty;\n  var spaces = opts.spaces || 2;\n\n  return function filter(ctx, next){\n    return next().then(() => {\n      var body = ctx.body;\n      // unsupported body type\n      var stream = body\n        && typeof body.pipe === 'function'\n        && body._readableState\n        && body._readableState.objectMode;\n      var json = isJSON(body);\n      if (!json && !stream) return;\n\n      // query\n      var hasParam = param && hasOwnProperty.call(ctx.query, param);\n      var prettify = pretty || hasParam;\n\n      // always stringify object streams\n      if (stream) {\n        ctx.response.type = 'json';\n        var stringify = Stringify();\n        if (prettify) stringify.space = spaces;\n        ctx.body = body.pipe(stringify);\n        return;\n      }\n\n      // prettify JSON responses\n      if (json && prettify) {\n        return ctx.body = JSON.stringify(body, null, spaces);\n      }\n    });\n  }\n};\n"]}