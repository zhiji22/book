{"version":3,"sources":["index.js"],"names":[],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.js","sourcesContent":["/**\n * CORS middleware for koa2\n *\n * @param {Object} [options]\n *  - {String|Function(ctx)} origin `Access-Control-Allow-Origin`, default is request Origin header\n *  - {Array} exposeHeaders `Access-Control-Expose-Headers`\n *  - {String|Number} maxAge `Access-Control-Max-Age` in seconds\n *  - {Boolean} credentials `Access-Control-Allow-Credentials`\n *  - {Array} allowMethods `Access-Control-Allow-Methods`,\n *    default is ['GET', 'PUT', 'POST', 'PATCH', 'DELETE', 'HEAD', 'OPTIONS']\n *  - {Array} allowHeaders `Access-Control-Allow-Headers`\n * @return {Function}\n * @api public\n */\nmodule.exports = function crossOrigin(options = {}) {\n  const defaultOptions = {\n    allowMethods: ['GET', 'PUT', 'POST', 'PATCH', 'DELETE', 'HEAD', 'OPTIONS']\n  };\n\n  // set defaultOptions to options\n  options = Object.assign({}, defaultOptions, options); // eslint-disable-line no-param-reassign\n\n  // eslint-disable-next-line consistent-return\n  return async function cors(ctx, next) {\n    // always set vary Origin Header\n    // https://github.com/rs/cors/issues/10\n    ctx.vary('Origin');\n\n    let origin;\n    if (typeof options.origin === 'function') {\n      origin = options.origin(ctx);\n    } else {\n      origin = options.origin || ctx.get('Origin') || '*';\n    }\n    if (!origin) {\n      return await next();\n    }\n\n    // Access-Control-Allow-Origin\n    ctx.set('Access-Control-Allow-Origin', origin);\n\n    if (ctx.method === 'OPTIONS') {\n      // Preflight Request\n      if (!ctx.get('Access-Control-Request-Method')) {\n        return await next();\n      }\n\n      // Access-Control-Max-Age\n      if (options.maxAge) {\n        ctx.set('Access-Control-Max-Age', String(options.maxAge));\n      }\n\n      // Access-Control-Allow-Credentials\n      if (options.credentials === true) {\n        // When used as part of a response to a preflight request,\n        // this indicates whether or not the actual request can be made using credentials.\n        ctx.set('Access-Control-Allow-Credentials', 'true');\n      }\n\n      // Access-Control-Allow-Methods\n      if (options.allowMethods) {\n        ctx.set('Access-Control-Allow-Methods', options.allowMethods.join(','));\n      }\n\n      // Access-Control-Allow-Headers\n      if (options.allowHeaders) {\n        ctx.set('Access-Control-Allow-Headers', options.allowHeaders.join(','));\n      } else {\n        ctx.set('Access-Control-Allow-Headers', ctx.get('Access-Control-Request-Headers'));\n      }\n\n      ctx.status = 204; // No Content\n    } else {\n      // Request\n      // Access-Control-Allow-Credentials\n      if (options.credentials === true) {\n        if (origin === '*') {\n          // `credentials` can't be true when the `origin` is set to `*`\n          ctx.remove('Access-Control-Allow-Credentials');\n        } else {\n          ctx.set('Access-Control-Allow-Credentials', 'true');\n        }\n      }\n\n      // Access-Control-Expose-Headers\n      if (options.exposeHeaders) {\n        ctx.set('Access-Control-Expose-Headers', options.exposeHeaders.join(','));\n      }\n\n      try {\n        await next();\n      } catch (err) {\n        throw err;\n      }\n    }\n  };\n};"]}